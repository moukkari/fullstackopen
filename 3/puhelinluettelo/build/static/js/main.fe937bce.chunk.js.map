{"version":3,"sources":["components/Filter.js","services/phoneService.js","components/Notification.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["Filter","props","onChange","event","setFiltered","persons","filter","person","name","toLowerCase","includes","target","value","url","axios","get","then","r","data","newObj","post","id","req","delete","catch","status","console","log","put","Notification","msg","error","className","PersonForm","useState","newName","setNewName","newNumber","setNewNumber","message","setMessage","errorTypeOfMsg","setErrorTypeofMsg","onSubmit","preventDefault","some","window","confirm","find","x","number","srv","setAllPersons","setTimeout","concat","err","response","placeholder","type","Persons","map","key","onClick","handleRemoveClick","App","setPersons","filteredPersons","newPersonList","useEffect","initialPhoneBook","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe937bce.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    const handleFilter = (event) => {\n        props.setFiltered(props.persons.filter(\n            person => person.name.toLowerCase().includes(event.target.value.toLowerCase())))\n    }\n    return (\n    <form>\n        filter <input onChange={handleFilter} />\n    </form> \n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst url = '/api/persons'\n\nconst getAll = () => {\n    const req = axios.get(url)\n    return req.then(r => r.data)\n}\n\nconst add = newObj => {\n    const req = axios.post(url, newObj)\n    return req.then(r => r.data)\n}\n\nconst remove = id => {\n    const req = axios.delete(`${url}/${id}`)\n        .catch(() => {\n            return { status: 404 }\n        })     \n    console.log(`deleted id ${id}`)\n    return req.then(r => r.status)\n\n}\n\nconst update = (id, newObj) => {\n    const req = axios.put(`${url}/${id}`, newObj)\n    return req.then(r => r.data)\n}\n\nexport default { getAll, add, remove, update }","import React from 'react'\nimport './Notification.css'\n\nconst Notification = ({msg, error}) => {\n    if (msg === '' || msg === null) {\n        return null\n    } else if (error) {\n        return <div className=\"error note\">{msg}</div>\n    } else {\n        return <div className=\"info note\">{msg}</div>\n    }\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport srv from '../services/phoneService'\nimport Notification from './Notification'\n\nconst PersonForm = (props) => {\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ message, setMessage ] = useState('')\n    const [ errorTypeOfMsg, setErrorTypeofMsg ] = useState(false)\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (props.persons.some(person => person.name === newName)) {\n            const answer = window.confirm(`${newName} is already in the phonebook. Replace the old number with a new one?`)\n            if (answer) {\n                let person = props.persons.find(x => x.name === newName)\n                person.number = newNumber\n                srv.update(person.id, person)\n                    .then(r => srv.getAll().then(r => {\n                        props.setAllPersons(r)\n                        setMessage(`Updated ${person.name}`)\n                        setTimeout(() => setMessage(null), 5000)\n                }))        \n            }\n        } else {\n            let newObj = {name: newName, number: newNumber}\n            srv.add(newObj).then(r =>  {\n                props.setAllPersons(props.persons.concat(r))\n                setMessage(`Added ${r.name}`)\n                setTimeout(() => setMessage(null), 5000)\n            })\n            .catch(err => {\n                setErrorTypeofMsg(true)\n                setMessage(err.response.data.error)\n                setTimeout(() => {\n                    setMessage(null)\n                    setErrorTypeofMsg(false)\n                }, 5000)\n            })\n            \n        }\n    }\n    const handleNameChange = (event) => setNewName(event.target.value)\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                name: <input onChange={handleNameChange} placeholder=\"New person...\"/>\n                <br/>\n                number: <input onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n                <Notification msg={message} error={errorTypeOfMsg} />\n            </div>\n        </form>\n    ) \n}\n\nexport default PersonForm","import React, {useState} from 'react'\nimport srv from '../services/phoneService'\nimport Notification from './Notification'\n\nconst Persons = (props) => {\n    const [ message, setMessage ] = useState('')\n\n    const handleRemoveClick = (person) => {\n        const answer = window.confirm(`Do you really want to delete ${person.name}`)\n        if (answer) {\n            srv.remove(person.id).then((status) => {\n                if (status === 204) {\n                    props.setAllPersons(props.data.filter(x => x !== person))\n                    setMessage(`Deleted ${person.name}`)\n                    setTimeout(() => setMessage(null), 5000)\n                } else {\n                    props.setAllPersons(props.data.filter(x => x !== person))\n                    setMessage(`${person.name} has already been deleted`)\n                    setTimeout(() => setMessage(null), 5000)\n                }\n            })\n        }\n    }\n\n    let data = props.data.map(person =>\n        <p key={person.name}>\n            {person.name} - {person.number} \n            <button onClick={() => handleRemoveClick(person)}>remove</button>\n        </p>\n    )\n    return (\n        <div>\n            <Notification msg={message} error={true} />\n            {data}\n        </div>  \n    )\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport srv from './services/phoneService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ filteredPersons, setFiltered ] = useState([])\n\n  const setAllPersons = (newPersonList) => {\n    setPersons(newPersonList)\n    setFiltered(newPersonList)\n  }\n\n  useEffect(() => {\n    srv.getAll().then(initialPhoneBook => {\n      setAllPersons(initialPhoneBook)\n    })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter persons={persons} setFiltered={setFiltered} />\n      <h3>Add new</h3>\n      <PersonForm persons={persons} setAllPersons={setAllPersons} />\n      <h3>Numbers</h3>\n      <Persons data={filteredPersons} setAllPersons={setAllPersons} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}